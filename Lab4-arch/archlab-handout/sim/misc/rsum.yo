                            | # rsum.ys by name1e5s
                            | # Execution begins at address 0    
0x000:                      |      .pos 0
0x000: 30f40004000000000000 |      irmovq stack,  %rsp
0x00a: 804800000000000000   |      call main
0x013: 90                   |      ret
                            | 
                            | # Sample linked list
0x018:                      | 	    .align 8
0x018:                      | 	    ele1:
0x018: 0a00000000000000     | 	    .quad 0x00a
0x020: 2800000000000000     | 	    .quad e1e2
0x028:                      | 	    e1e2:
0x028: b000000000000000     | 	    .quad 0x0b0
0x030: 3800000000000000     | 	    .quad e1e3
0x038:                      | 	    e1e3:
0x038: 000c000000000000     | 	    .quad 0xc00
0x040: 0000000000000000     | 	    .quad 0
                            | 
0x048:                      | main:
0x048: 30f71800000000000000 |       irmovq ele1,  %rdi
0x052: 805c00000000000000   |       call rsum_list
0x05b: 90                   |       ret
                            | 
0x05c:                      | rsum_list:
0x05c: a0df                 |           pushq  %r13      #store the pointer of the function //保存递归的指针 
0x05e: 30f00000000000000000 |           irmovq $0,   %rax
0x068: 6277                 |           andq   %rdi, %rdi   #adjust the ls==0
0x06a: 739200000000000000   |           je loop1           #ls==0  jump to the loop1
0x073: 50d70000000000000000 |           mrmovq  0(%rdi), %r13  #store the value in the %rbx
0x07d: 50770800000000000000 |           mrmovq  8(%rdi), %rdi
0x087: 805c00000000000000   |           call rsum_list
0x090: 60d0                 |           addq    %r13,    %rax
                            |          # rrmovq  %rdi,    %rax
                            |         #  ret 
0x092:                      | loop1:
0x092: b0df                 |        popq  %r13         #pop out the pointer 
0x094: 90                   |        ret
                            |  
0x400:                      |        .pos 0x400
0x400:                      | stack:
                            |  
