# rsum.ys by name1e5s
# Execution begins at address 0    
     .pos 0
     irmovq stack,  %rsp
     call main
     ret

# Sample linked list
	    .align 8
	    ele1:
	    .quad 0x00a
	    .quad e1e2
	    e1e2:
	    .quad 0x0b0
	    .quad e1e3
	    e1e3:
	    .quad 0xc00
	    .quad 0

main:
      irmovq ele1,  %rdi
      call rsum_list
      ret

rsum_list:
          pushq  %r13      #store the pointer of the function //保存递归的指针 
          irmovq $0,   %rax
          andq   %rdi, %rdi   #adjust the ls==0
          je loop1           #ls==0  jump to the loop1
          mrmovq  0(%rdi), %r13  #store the value in the %rbx
          mrmovq  8(%rdi), %rdi
          call rsum_list
          addq    %r13,    %rax
         # rrmovq  %rdi,    %rax
        #  ret 
loop1:
       popq  %r13         #pop out the pointer 
       ret
 
       .pos 0x400
stack:
 
